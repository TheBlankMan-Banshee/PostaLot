{"version":3,"sources":["containers/signin/signin.js","containers/register/register.js","components/navigation/navigation.js","App.js","reportWebVitals.js","index.js"],"names":["SignIn","props","onEmailChange","event","setState","signInEmail","target","value","onPasswordChange","signInPassword","onSubmitSignIn","fetch","method","headers","body","JSON","stringify","email","state","password","then","res","json","user","id","loadUser","onRouteChange","this","className","htmlFor","onChange","type","name","onClick","Component","Register","onNameChange","onRegister","Navigation","isSignedIn","style","display","justifyContent","particlesOptions","particles","number","density","enable","value_area","size","initialState","route","userProfile","App","data","params","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.4710a2c0.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\n\r\nclass SignIn extends Component {\r\n    constructor(props) {\r\n        super();\r\n        this.state = {\r\n            signInEmail: '',\r\n            signInPassword: ''\r\n        }\r\n    }\r\n\r\n    // Event on email input\r\n    onEmailChange = (event) => {\r\n        this.setState({signInEmail: event.target.value});\r\n    }\r\n\r\n    // Event on password input\r\n    onPasswordChange = (event) => {\r\n        this.setState({signInPassword: event.target.value});\r\n    }\r\n\r\n    // Event on sign In button\r\n    onSubmitSignIn = () => {\r\n        fetch('http://localhost:3000/signin', { // fetch implements by default the GET method\r\n            method: 'post',\r\n            headers: {'Content-Type':'application/json'},\r\n            body: JSON.stringify({ // send JSON object back as string to server\r\n                email: this.state.signInEmail,\r\n                password: this.state.signInPassword\r\n            })\r\n        })\r\n        .then(res => res.json())\r\n        .then(user => {\r\n            if (user.id) { // Check if user with this id exists\r\n                this.props.loadUser(user);\r\n                this.props.onRouteChange('Home');\r\n            }\r\n        });\r\n    }\r\n\r\n    render() {\r\n        const {onRouteChange} = this.props;\r\n         return (\r\n            <article className=\"br3 ba dark-gray b--black-10 mv4 w-100 w-50-m w-25-l mw6 shadow-5 center\">\r\n                <main className=\"pa4 black-80\">\r\n                    <div className=\"measure\">\r\n                        <fieldset id=\"sign_up\" className=\"ba b--transparent ph0 mh0\">\r\n                            <legend className=\"f1 fw6 ph0 mh0\">Sign In</legend>\r\n                            <div className=\"mt3\">\r\n                                <label  className=\"db fw6 lh-copy f6\" htmlFor=\"email-address\">Email</label>\r\n                                <input onChange={this.onEmailChange} \r\n                                className=\"pa2 input-reset ba bg-transparent hover-bg-black hover-white w-100\" \r\n                                type=\"email\"\r\n                                name=\"email-address\"  \r\n                                id=\"email-address\"/>\r\n                            </div>\r\n                            <div className=\"mv3\">\r\n                                <label  className=\"db fw6 lh-copy f6\" htmlFor=\"password\">Password</label>\r\n                                <input onChange={this.onPasswordChange} \r\n                                className=\"b pa2 input-reset ba bg-transparent hover-bg-black hover-white w-100\" \r\n                                type=\"password\" \r\n                                name=\"password\"  \r\n                                id=\"password\"/>\r\n                            </div>\r\n                        </fieldset>\r\n                        <div className=\"\">\r\n                            {/* Event declared above fires when clicking on the button */}\r\n                            <input onClick={this.onSubmitSignIn} \r\n                            className=\"b ph3 pv2 input-reset ba b--black bg-transparent grow pointer f6 dib\" \r\n                            type=\"submit\" \r\n                            value=\"Sign in\"/>\r\n                        </div>\r\n                        <div className=\"lh-copy mt3\">\r\n                            <p onClick={() => onRouteChange('register')} className=\"f6 link dim black db pointer\">Register</p>\r\n                        </div>\r\n                    </div>\r\n                </main>\r\n            </article>\r\n        );\r\n    } \r\n}\r\n\r\nexport default SignIn;","import React, { Component } from 'react';\r\n\r\nclass Register extends Component {\r\n    constructor(props) {\r\n        super();\r\n        this.state = {\r\n            name: '',\r\n            email: '',\r\n            password: ''\r\n        }\r\n    }\r\n\r\n    onNameChange = (event) => {\r\n        this.setState({name: event.target.value});\r\n    }\r\n\r\n    onEmailChange = (event) => {\r\n        this.setState({email: event.target.value});\r\n    }\r\n\r\n    onPasswordChange = (event) => {\r\n        this.setState({password: event.target.value});\r\n    }\r\n\r\n    onRegister = () => {\r\n        fetch('http://localhost:3000//register', { \r\n            method: 'post',\r\n            headers: {'Content-Type':'application/json'},\r\n            body: JSON.stringify({\r\n                name: this.state.name,\r\n                email: this.state.email,\r\n                password: this.state.password\r\n            })\r\n        })\r\n        .then(res => res.json())\r\n        .then(user => {\r\n            if (user.id) {\r\n                this.props.loadUser(user);\r\n                this.props.onRouteChange('Home');\r\n            }\r\n        });\r\n    }\r\n\r\n    render() {\r\n         return (\r\n            <article className=\"br3 ba dark-gray b--black-10 mv4 w-100 w-50-m w-25-l mw6 shadow-5 center\">\r\n                <main className=\"pa4 black-80\">\r\n                    <div className=\"measure\">\r\n                        <fieldset id=\"sign_up\" className=\"ba b--transparent ph0 mh0\">\r\n                            <legend className=\"f1 fw6 ph0 mh0\">Register</legend>\r\n                            <div className=\"mt3\">\r\n                                <label className=\"db fw6 lh-copy f6\" htmlFor=\"user-name\">Name</label>\r\n                                <input className=\"pa2 input-reset ba bg-transparent hover-bg-black hover-white w-100\" \r\n                                type=\"text\" \r\n                                name=\"name\"  \r\n                                id=\"user-name\"\r\n                                onChange={this.onNameChange}/>\r\n                            </div>\r\n                            <div className=\"mt3\">\r\n                                <label className=\"db fw6 lh-copy f6\"  htmlFor=\"email-address\">Email</label>\r\n                                <input className=\"pa2 input-reset ba bg-transparent hover-bg-black hover-white w-100\" \r\n                                type=\"email\"\r\n                                name=\"email-address\"  \r\n                                id=\"email-address\"\r\n                                onChange={this.onEmailChange}/>\r\n                            </div>\r\n                            <div className=\"mv3\">\r\n                                <label className=\"db fw6 lh-copy f6\"  htmlFor=\"password\">Password</label>\r\n                                <input className=\"b pa2 input-reset ba bg-transparent hover-bg-black hover-white w-100\" \r\n                                type=\"password\" \r\n                                name=\"password\"  \r\n                                id=\"password\"\r\n                                onChange={this.onPasswordChange}/>\r\n                            </div>\r\n                        </fieldset>\r\n                        <div className=\"\">\r\n                            {/* onRouteChange fires when clicking on the button */}\r\n                            <input onClick={this.onRegister} \r\n                            className=\"b ph3 pv2 input-reset ba b--black bg-transparent grow pointer f6 dib\" \r\n                            type=\"submit\" \r\n                            value=\"Register\"/>\r\n                        </div>\r\n                    </div>\r\n                </main>\r\n            </article>\r\n        );\r\n    }\r\n   \r\n}\r\n\r\nexport default Register;","import React from 'react';\r\n\r\nconst Navigation = ({onRouteChange, isSignedIn}) => {\r\n    if (isSignedIn) {\r\n        return (\r\n            <nav style={{display: 'flex', justifyContent: 'flex-end'}}> {/* position nav at top right corner of page */}\r\n                <p onClick={() => onRouteChange('signout')} className=\"f3 link dim black underline pa3 pointer b\">Sign out</p>\r\n            </nav>\r\n        );\r\n    } else {\r\n        return (\r\n            <div>\r\n                <nav style={{display: 'flex', justifyContent: 'flex-end'}}>\r\n                    <p onClick={() => onRouteChange('signin')} className=\"f3 link dim black underline pa3 pointer b\">Sign in</p>\r\n                    <p onClick={() => onRouteChange('register')} className=\"f3 link dim black underline pa3 pointer b\">Register</p>\r\n                </nav>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Navigation;","import React, { Component } from 'react';\r\nimport './App.css';\r\nimport SignIn from './containers/signin/signin';\r\nimport Register from './containers/register/register';\r\nimport Navigation from './components/navigation/navigation';\r\nimport Particles from 'react-particles-js';\r\nimport 'tachyons';\r\n\r\nconst particlesOptions = {\r\n  particles: {\r\n    number: {\r\n      value: 30,\r\n      density: {\r\n        enable: true,\r\n        value_area: 150\r\n      }\r\n    },\r\n    size: {\r\n      \"value\": 5,\r\n      \"random\": true,\r\n      \"anim\": {\r\n        \"enable\": true,\r\n        \"speed\": 80,\r\n        \"size_min\": 1000,\r\n        \"sync\": false\r\n      }\r\n    },\r\n    \"line_linked\": {\r\n      \"enable\": true,\r\n      \"distance\": 155,\r\n      \"opacity\": 0.4,\r\n      \"width\": 2\r\n    },\r\n  }\r\n}\r\n\r\n// state when user logs in\r\nconst initialState = {\r\n  route: 'signIn',\r\n  isSignedIn: false,\r\n  userProfile: {\r\n      id: '',\r\n      name: '',\r\n      email: '',\r\n      password: ''\r\n  }\r\n}\r\n\r\nclass App extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = initialState;\r\n  }\r\n\r\n  onRouteChange = (route) => {\r\n    if (route === 'signout') {\r\n      this.setState(initialState);\r\n    } else if (route === 'Home') {\r\n      this.setState({isSignedIn: true});\r\n    }\r\n    this.setState({route: route});\r\n  }\r\n\r\n  loadUser = (data) => {\r\n      this.setState({userProfile: {\r\n        id: data.id,\r\n        name: data.name,\r\n        email: data.email,\r\n        password: data.password\r\n      }});\r\n  }\r\n\r\n  render() {\r\n    const { isSignedIn, route} = this.state; // Destructuring\r\n    return (\r\n      <div className=\"App\">\r\n        <Particles className=\"particles\" params={particlesOptions} />\r\n        <Navigation isSignedIn={isSignedIn} onRouteChange={this.onRouteChange}/>\r\n        { this.state.route === 'Home' ?\r\n          <div>\r\n              POSTALOT being maintained...\r\n          </div> : (\r\n            route === 'signin' ?\r\n            <SignIn loadUser={this.loadUser} onRouteChange={this.onRouteChange}/> :\r\n            <Register loadUser={this.loadUser} onRouteChange={this.onRouteChange}/>\r\n          )\r\n        }\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}